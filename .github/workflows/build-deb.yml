name: Build Debian Package

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-deb:
    runs-on: ubuntu-latest
    container: ubuntu:22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y \
            devscripts \
            debhelper \
            build-essential \
            git \
            fakeroot \
            python3

      - name: Extract version
        id: version
        run: |
          VERSION=$(python3 -c "import re, pathlib; t=pathlib.Path('sshpilot/__init__.py').read_text(); print(re.search(r'__version__\\s*=\\s*[\"\\']([^\"\\']*)[\"\\'']', t).group(1))")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Detected version: $VERSION"

      - name: Create debian directory
        run: |
          mkdir -p debian/source
          
      - name: Create debian/control
        run: |
          cat > debian/control << 'EOF'
          Source: sshpilot
          Section: utils
          Priority: optional
          Maintainer: mFat <newmfat@gmail.com>
          Build-Depends: debhelper-compat (= 13)
          Standards-Version: 4.6.2
          Homepage: https://github.com/mfat/sshpilot
          Rules-Requires-Root: no
          
          Package: sshpilot
          Architecture: all
          Depends: ${misc:Depends}, ${python3:Depends},
                   python3,
                   python3-gi,
                   python3-gi-cairo,
                   libgtk-4-1 (>= 4.6), gir1.2-gtk-4.0 (>= 4.6),
                   libadwaita-1-0 (>= 1.4), gir1.2-adw-1 (>= 1.4),
                   libvte-2.91-gtk4-0 (>= 0.70), gir1.2-vte-3.91 (>= 0.70),
                   python3-paramiko,
                   python3-cryptography,
                   python3-secretstorage,
                   python3-matplotlib,
                   sshpass
          Description: SSH connection manager with integrated terminal
           sshPilot provides SSH connection management, integrated terminal using VTE,
           tunneling, key management, and tabbed interface.
          EOF

      - name: Create debian/changelog
        run: |
          cat > debian/changelog << 'EOF'
          sshpilot (${{ steps.version.outputs.version }}-1) unstable; urgency=medium
          
            * Automated build from GitHub Actions
          
           -- mFat <newmfat@gmail.com>  $(date -R)
          EOF

      - name: Create debian/rules
        run: |
          cat > debian/rules << 'EOF'
          #!/usr/bin/make -f
          %:
          	dh $@
          override_dh_auto_build:
          	# No build step needed - standalone Python application
          override_dh_auto_install:
          	# Install the main executable (runner)
          	install -D -m 755 run.py $(CURDIR)/debian/sshpilot/usr/bin/sshpilot
          	# Install resources into site-packages so app can import
          	install -d $(CURDIR)/debian/sshpilot/usr/lib/python3/dist-packages/sshpilot
          	cp -a sshpilot/*.py $(CURDIR)/debian/sshpilot/usr/lib/python3/dist-packages/sshpilot/
          	install -d $(CURDIR)/debian/sshpilot/usr/lib/python3/dist-packages/sshpilot/resources $(CURDIR)/debian/sshpilot/usr/lib/python3/dist-packages/sshpilot/ui
          	cp -a sshpilot/resources/* $(CURDIR)/debian/sshpilot/usr/lib/python3/dist-packages/sshpilot/resources/
          	cp -a sshpilot/ui/* $(CURDIR)/debian/sshpilot/usr/lib/python3/dist-packages/sshpilot/ui/
          	# Install desktop file and icon
          	install -D -m 644 io.github.mfat.sshpilot.desktop $(CURDIR)/debian/sshpilot/usr/share/applications/io.github.mfat.sshpilot.desktop
          	install -D -m 644 sshpilot/resources/sshpilot.svg $(CURDIR)/debian/sshpilot/usr/share/pixmaps/io.github.mfat.sshpilot.svg
          override_dh_auto_test:
          	# Skip tests for now (can be enabled later)
          override_dh_auto_clean:
          	# Nothing to clean
          EOF
          chmod +x debian/rules

      - name: Create debian/source/format
        run: |
          echo "3.0 (quilt)" > debian/source/format

      - name: Create debian/copyright
        run: |
          cat > debian/copyright << 'COPYRIGHT_EOF'
Format: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
Upstream-Name: sshpilot
Source: https://github.com/mfat/sshpilot

Files: *
Copyright: 2025 mFat <newmfat@gmail.com>
License: GPL-3+

Files: debian/*
Copyright: 2025 mFat <newmfat@gmail.com>
License: GPL-3+

License: GPL-3+
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 .
 This package is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 .
 You should have received a copy of the GNU General Public License
 along with this program. If not, see <https://www.gnu.org/licenses/>.
 .
 On Debian systems, the complete text of the GNU General
 Public License version 3 can be found in "/usr/share/common-licenses/GPL-3".
COPYRIGHT_EOF

      - name: Validate files
        run: |
          echo "=== Checking required files ==="
          ls -la run.py sshpilot/ io.github.mfat.sshpilot.desktop sshpilot/resources/sshpilot.svg || echo "Some files missing"
          
          echo "=== Debian files created ==="
          ls -la debian/
          
          echo "=== Control file ==="
          cat debian/control

      - name: Build package
        run: |
          dpkg-buildpackage -us -uc -b
          mkdir -p artifacts
          find .. -name "*.deb" -exec mv {} artifacts/ \;

      - name: List artifacts
        run: |
          ls -la artifacts/
          for deb in artifacts/*.deb; do
            echo "=== $deb ==="
            dpkg-deb --info "$deb"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debian-packages-${{ steps.version.outputs.version }}
          path: artifacts/*.deb

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.deb
          name: Release ${{ github.ref_name }}
          body: |
            Debian package for sshpilot ${{ steps.version.outputs.version }}
            
            **Installation:**
            ```bash
            sudo dpkg -i sshpilot_${{ steps.version.outputs.version }}-1_all.deb
            sudo apt-get install -f
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}