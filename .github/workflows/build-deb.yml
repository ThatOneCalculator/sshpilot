name: Build Debian Package

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-deb:
    runs-on: ubuntu-latest
    container: ubuntu:22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y \
            devscripts \
            debhelper \
            dh-python \
            python3-all \
            python3-setuptools \
            build-essential \
            git \
            fakeroot

      - name: Sync or create debian/changelog from __init__ version
        run: |
          VERSION=$(python3 -c "import re, pathlib; t=pathlib.Path('sshpilot/__init__.py').read_text(); print(re.search(r'__version__\\s*=\\s*\"([^\"]+)\"', t).group(1))")
          echo "Detected version: ${VERSION}"
          mkdir -p debian
          if [ ! -f debian/changelog ]; then
            {
              echo "sshpilot (${VERSION}-1) unstable; urgency=medium"
              echo
              echo "  * Various fixes and improvements"
              echo
              echo " -- mFat <newmfat@gmail.com>  $(LC_ALL=C date -R)"
            } > debian/changelog
          else
            # Update first line version
            sed -i -E "1 s/^sshpilot \\(.+\\)/sshpilot (${VERSION}-1)/" debian/changelog
            # Replace body with fixed message and update date on maintainer line
            awk -v date="$(LC_ALL=C date -R)" 'NR==1{print; print ""; print "  * Various fixes and improvements"; print ""; print " -- mFat <newmfat@gmail.com>  " date; exit}' debian/changelog > debian/changelog.new && mv debian/changelog.new debian/changelog
          fi
          head -n 6 debian/changelog

      - name: Ensure Debian packaging files (if missing)
        run: |
          mkdir -p debian/source
          if [ ! -f debian/control ]; then
            {
              echo "Source: sshpilot"
              echo "Section: utils"
              echo "Priority: optional"
              echo "Maintainer: mFat <newmfat@gmail.com>"
              echo "Build-Depends: debhelper-compat (= 13)"
              echo "Standards-Version: 4.6.2"
              echo "Homepage: https://github.com/mfat/sshpilot"
              echo "Rules-Requires-Root: no"
              echo
              echo "Package: sshpilot"
              echo "Architecture: all"
              echo "Depends: ${misc:Depends}, ${python3:Depends},"
              echo "         python3,"
              echo "         python3-gi,"
              echo "         python3-gi-cairo,"
              echo "         libgtk-4-1 (>= 4.6), gir1.2-gtk-4.0 (>= 4.6),"
              echo "         libadwaita-1-0 (>= 1.4), gir1.2-adw-1 (>= 1.4),"
              echo "         libvte-2.91-gtk4-0 (>= 0.70), gir1.2-vte-3.91 (>= 0.70),"
              echo "         python3-paramiko,"
              echo "         python3-cryptography,"
              echo "         python3-secretstorage,"
              echo "         python3-matplotlib,"
              echo "         sshpass"
              echo "Description: SSH connection manager with integrated terminal"
              echo " sshPilot provides SSH connection management, integrated terminal using VTE,"
              echo " tunneling, key management, and tabbed interface."
            } > debian/control
          fi
          if [ ! -f debian/rules ]; then
            printf '%s\n' '#!/usr/bin/make -f' '%:' $'\t''dh $@' > debian/rules
            chmod +x debian/rules
          fi
          if [ ! -f debian/source/format ]; then
            echo '3.0 (native)' > debian/source/format
          fi

      - name: Build package
        run: |
          dpkg-buildpackage -us -uc -b
          mkdir -p artifacts
          mv ../*.deb artifacts/

      - name: List built packages
        run: ls -l artifacts/*.deb

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debian-packages
          path: artifacts/*.deb

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.deb
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
